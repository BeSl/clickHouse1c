
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("bdName", dbName);
	Параметры.Свойство("ПараметрыПодключения", ПараметрыПодключения);
	Элементы.СоставТаблицыТипКолонки.СписокВыбора.ЗагрузитьЗначения(
							РеквизитФормыВЗначение("Объект")
							.ТипыДанныхСтолбцов()); 
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>
//// Код процедур и функций
//#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СписокДвижковТаблиц(Команда)
	СписокДвижковТаблицНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьЗапрос(Команда)
	СгенерироватьЗапросНаСервере();
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("IF_NOT_EXISTS", ?(IF_NOT_EXISTS, "IF NOT EXISTS", ""));
	СтруктураЗапроса.Вставить("dbName", dbName);
	СтруктураЗапроса.Вставить("table_name", table_name);
	СтруктураЗапроса.Вставить("ON_CLUSTER", ClusterName);
	СтруктураЗапроса.Вставить("COLUMS", КоллекцияКолонокВЗапрос());
	СтруктураЗапроса.Вставить("ENGINEоб", ENGINE + Символы.ПС + SETTINGS);	
	СтруктураЗапроса.Вставить("PRIMARY_KEYоб", КоллекцияКолонокВЗапрос(false));
	Оповестить("Секции запроса выборки", СтруктураЗапроса, "Создать таблицу");
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СписокДвижковТаблицНаСервере()
	 Элементы.ENGINE.СписокВыбора.ЗагрузитьЗначения(РеквизитФормыВЗначение("Объект").ДвижкиТаблиц(ПараметрыПодключения));
КонецПроцедуры

&НаСервере
Процедура СгенерироватьЗапросНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Функция КоллекцияКолонокВЗапрос(PrimaryKey = True)
	
	СоставНовойТаблицы = Новый Массив;

	Для каждого СтрокаКолонок из СоставТаблицы Цикл 
		Если PrimaryKey Тогда	
			ЗаготовкаСтроки = "%1 %2";
			СоставНовойТаблицы.Добавить(СтрШаблон(ЗаготовкаСтроки, 
											СтрокаКолонок.ИмяКолонки, СтрокаКолонок.ТипКолонки));
		Иначе
			Если СтрокаКолонок.PRIMARY_KEY Тогда											
				ЗаготовкаСтроки = "%1 ";
				СоставНовойТаблицы.Добавить(СтрШаблон(ЗаготовкаСтроки, 
											СтрокаКолонок.ИмяКолонки));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СоставНовойТаблицы;
	
КонецФункции
#КонецОбласти