#Область ОписаниеПеременных
Перем ТипДвижкаБДПоУмолчанию;

&НаКлиенте
Перем Движки;
#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	ТипДвижкаБазыДанных = ТипДвижкаБДПоУмолчанию;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ТипБазыДанных.СписокВыбора.ЗагрузитьЗначения(СписокТиповДвижков());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ТипБазыДанныхПриИзменении(Элемент)
	
	ТипБазыДанныхПриИзмененииСервер();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгенерироватьЗапрос(Команда)
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("IF_NOT_EXISTS", ?(IF_NOT_EXISTS, "IF NOT EXISTS", ""));
	СтруктураЗапроса.Вставить("dbName", ИмяБазыДанных);
	СтруктураЗапроса.Вставить("ON_CLUSTERоб", ClusterName);
	
	Если Не ПустаяСтрока(СокрЛП(ПараметрыДвижка)) Тогда
		СтруктураЗапроса.Вставить("ENGINEоб", СтрШаблон("%1(%2)",ТипДвижкаБазыДанных, ПараметрыДвижка));
	Иначе	
		СтруктураЗапроса.Вставить("ENGINEоб", ТипДвижкаБазыДанных);
	КонецЕсли;
	
	Оповестить("Секции запроса выборки", СтруктураЗапроса, "Создать Базу Данных");
	Закрыть();
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СписокТиповДвижков()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	КоллекцияДвижков = Новый Массив;
	Для каждого КлючЗначение из ОбработкаОбъект.ДвижкиБазДанных() Цикл
		КоллекцияДвижков.Добавить(КлючЗначение.Ключ);	
	КонецЦикла;

	Возврат КоллекцияДвижков;
	
КонецФункции

&НаСервере
Процедура ТипБазыДанныхПриИзмененииСервер()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыДвижка = ОбработкаОбъект.ДвижкиБазДанных()[ТипДвижкаБазыДанных];	
	
КонецПроцедуры
#КонецОбласти

ТипДвижкаБДПоУмолчанию = "Atomic";